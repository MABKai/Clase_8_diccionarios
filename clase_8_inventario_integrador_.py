# -*- coding: utf-8 -*-
"""clase 8 inventario integrador .ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1z9BbhYO3EKbriQnlu5CFAmdZ7OTa7ukD
"""

" Ejercicio clase 8 a modo integrador"
"""
programa para modificar elimnar ver y agregar prodcutos, stock y precio
de un producto en especial, en lista y de a pares
se verifica que las netradas seas enteros/float cuando se necesitya
se verifca que las entrada que deben ser solo algabeticas,lo sean
indica error en los ingresos si no estan correctos
alerta de stock bajo y precio no valido,
se puede borra todo el inventario
se pueden hacer varias tarea y salir de una tarea con un enter
se sale del programa con una opcion la 19
mostrando el inventraio actualizado con las alertas de los productos
con bajo stock y precio nuelo
"""
import matplotlib.pyplot as plt
precio = float
stock = int
producto = str
proodcutos = {}
productos={"Interior": {"precio": 25000, "stock": 100},
           "Exoticas":{"precio": 45000, "stock": 20  },
           "Cicca":{"precio": 78000,"stock": 10},
           "Pindo": {"precio": 40000, "stock": 13},
           "Pandurata HG": {"precio": 120000, "stock": 10},
           "Alocassia": {"precio": 80000,"stock": 54},
           "Pandurata HC": {"precio": 110000, "stock": 32},
           "Platycerium" : {"precio": 87000, "stock": 44},
           "Potus": {"precio": 0, "stock": 12},
           "Alegria": {"precio": "None", "stock": 12},
           "Exterior": {"precio": 45000, "stock": 12}}
# Bucle con for para obtener si un producto teien bajo stock, si es asi, muestra un alerta
# Dentro del bucle chequeo si el precio de un articulo es nulo
for producto, detalles in productos.items():
  stock_numero = detalles["stock"]
  precio_numero = detalles["precio"]
  if isinstance(stock_numero, int) and stock_numero <= 10: # Chequeamos stock, ensuring it's an integer
      print(f"ALERTA DE STOCK.  El stock de {producto} es  bajo. {stock_numero} unidades.") # Muestro el alerta
  #else: # Stock esta ok, continuo
   #   print(f"{producto.capitalize()}: {stock_numero} unidades")
  if precio_numero == 0 or precio_numero == "None":
    print(f"ALERTA DE PRECIO.  El precio de {producto} es  nulo. $ {precio_numero} .")
  #    print(f"{producto.capitalize()}: $  {precio_numero}")
# Eleccion de operacion a realizarse
while True:
  while True:
        print("\n Elige que tarea queres realizar introduciendo el numero correspondiente.")
        print(" 1. Ver Producto/Stock \n 2. Eliminar Producto \n 3. Modificar stock ")
        print(" 4. Modificar precio \n 5. Agregar producto, stock  y precio \n 6. Venta de un producto")
        print(" 7. Inventario disponible \n 8. Ver solo Productos disponibles \n  9. Ver solo stock disponible")
        print(" 10. Ver solo precios  \n 11. Ver precio de un producto 12. Ver stock de un producto")
        print(" 13. Agregar Producto \n 14. Compra de un producto ")
        print(" 15. Borrar Inventario \n 16. Salir \n 17. Ver grafico de stock") # Added new option
# falta productos.update() inserta otro diccionario iterando,por ej correo, edad telefono mail
# Falta productos.copy() copia superficial  del diccionario
# ARREGLAR 5  deberia sakir del bucle, grabar el stock, hacer bicle hasta que este corecto el precio,
# para salir del bucle y grabar en el diccionario el precio
        try:
           respuesta = int(input("Respuesta: "))
           # se valida que la entrada sea numerica con el Try except y con el if
           #que el numero ingresado sea ente 1 y 18
           if respuesta >0 and respuesta < 18: # Changed 17 to 18 to include the new option
              break
           else: print(" Error. Numero fuera de rango.")
        except ValueError:
           print(" Error. Por favor ingrese solo números.")
           # Con Match determinamos las tareas a realizarse
        if not productos:
          print(" El inventario está vacío. ")

# Con Match, se acceden a las diferentes opciones de manipulacion del inventario

  match respuesta:
          #con items, vemos el inventario, producto, stock y precio
         case 1:
              print(productos.items())
         # Eliminar un producto
         case 2:
                while True:
                      eliminar = input("\n Ingresá el nombre del producto que querés eliminar (o presioná Enter para terminar): ").lower().title().strip()

                      # Si el usuario presiona Enter sin escribir nada, se sale del bucle
                      if eliminar == "":
                        break
                    # Validacion de ingreso de caracteres no numericos ni especiales
                      if eliminar.replace(" ", "").isalpha(): # permite espacios entre nombres para plantas con nombres compuestos
                          if eliminar in productos:
                             productos.pop(eliminar)
                             print(f" El producto '{eliminar}' fue eliminado del inventario.")
                          else:
                             print(f" El producto '{eliminar}' no existe en el inventario.")
                      else:
                        print(" Error. Por favor ingrese solo letras.")
         # Modificar stock de un producto manualmente
         case 3:
              print("\n Ingresá el nombre del producto que querés modificar stock (o presioná Enter para terminar):")
              while True:

                   producto = input(" Producto a modificar stock ").lower().title().strip()
                   #Condición para salir del bucle si el código está vacío
                   if producto == "":
                      break
                   # valido carcatres alfabeticos para producto
                   if not producto.replace(" ", "").isalpha():
                     print(" Error. Por favor ingrese solo letras.")
                   else:
                     #valido que este el producto para modificar su stock
                      if producto in productos:
                        while True:
                         try:
                             nuevo_stock = int(input(" Stock del Articulo: "))
                             productos[producto]["stock"] = nuevo_stock
                             if productos[producto]["stock"] <=10:
                                print(f" Alerta! El stock de {producto} es  bajo. {nuevo_stock} unidades.")
                                pregunta = input(" Quiere mantener este stock? Y/N ").lower().strip()
                                if pregunta == "y":
                                   productos[producto]["stock"] = nuevo_stock
                                   print(f" El stock del producto '{producto}' fue modificado en el inventario.")
                                   break
                                else:
                                   print(f" El stock del producto '{producto}' no fue modificado en el inventario.")
                                   #  Para pregungtar porstock si no queremos mantener el bajo stock
                                   continue
                             else:
                                print(f" El stock del producto '{producto}' fue modificado en el inventario.")
                                break
                         except ValueError:
                                print(" Error. Por favor ingrese solo números.")
                      else:
                          print(f" El producto '{producto}' no existe en el inventario.")

         # Modificar precio de un producto manualmente
         case 4:
              print("\n Ingresá el nombre del producto que querés modificar precio (o presioná Enter para terminar):")
              while True:

                   modificar_clave = input(" Producto a modificar precio ").lower().title().strip()
                   #Condición para salir del bucle si el código está vacío
                   if modificar_clave == "":
                      break
                   # Valido que no haya carcateres numericos o especiales en el nombre del producto
                   if not modificar_clave.replace(" ", "").isalpha():
                    print(" Error. Por favor ingrese solo letras.")
                   else:
                    if modificar_clave in productos: #valido que este el producto para modificar su stock

                       while True:
                        try:
                          nuevo_precio = float(input(" Precio del Articulo: "))
                          if nuevo_precio < 0:
                             print(f" ALERTA. El precio del producto '{modificar_clave}' es menor a cero. No es Modificado")
                             continue # para preguntar de nuevo si el valor es 0
                          if nuevo_precio == 0 :
                            print(f" ALERTA. El precio del producto '{modificar_clave}' es nulo. No es Modificado")
                            repuesta = input(" Quiere mantener este precio? Y/N ").lower().strip()
                            if repuesta == "y":
                               productos[modificar_clave]['precio'] = nuevo_precio
                               print(f" El precio del producto '{modificar_clave}' fue modificado en el inventario.")
                               break
                            else:
                                continue # pregunta de nuevo ante un valor igual a 0
                          else:
                            productos[modificar_clave]['precio'] = nuevo_precio #
                            print(f" El precio del producto '{modificar_clave}' fue modificado en el inventario.")
                            break
                        except ValueError:
                            print(" Error. Por favor ingrese solo números.")
                    else:
                      print(f" El producto '{modificar_clave}' no existe en el inventario.")
        #agrego producto, precio y stock
         case 5:
              print("\n Ingresá el nombre del producto para inventariar:(o presioná Enter para terminar):")
              while True:
                      producto = input(" Producto a ingresar ").lower().title().strip()
                        #Condición para salir del bucle si el código está vacío
                      if producto == "":
                         break
                         # Valido que no se ingresen carcatrees numericos o especiales en el nombre del producto
                      if producto.replace(" ", "").isalpha():

                         if producto in productos:
                            print(f" El producto '{producto}' ya existe en el inventario.")
                         else:
                            while True: # bucle para validar valores
                                try:
                                   nuevo_stock = int(input(" Stock del Producto: "))
                                   nuevo_precio= float (input(" Precio del Articulo: "))
                                   if nuevo_precio < 0 :
                                      print(f" ALERTA. El precio del producto '{producto}' es menor a cero. No es ingresado")
                                      continue
                                   if nuevo_precio == 0  or nuevo_precio == "None":
                                      print(f" ALERTA. El precio del producto '{producto}' es nulo. No es ingresado")
                                      continue
                                   if nuevo_stock < 0 :
                                      print(f" ALERTA. El stock del producto '{producto}' es menor a cero. No es ingresado")
                                      continue
                                   if nuevo_stock < 0 and nuevo_stock <=10:
                                      print(f" ALERTA. El stock del producto '{producto}' es bajo. No es ingresado")
                                      if input(" Quiere mantener este stock? Y/N ").lower().strip() == "y":
                                         nuevo_stock = nuevo_stock
                                      else:
                                         continue
                                   productos[producto] = {"stock": nuevo_stock, "precio": nuevo_precio}
                                   print(f" El producto y su stock '{producto}' fueron agregados en el inventario.")
                                   break
                                except ValueError:
                                   print(" Error.Por favor ingrese solo números para Stock y Float.")
                      else:
                        print(" Error. Por favor ingrese solo letras.")
         # Ingresamos cantidad vendida para modificar stock
         case 6:
            while True:
                      print("\n Ingresá el nombre del producto vendido:(o presioná Enter para terminar):")
                      producto_vendido = input(" Producto vendido ").lower().title().strip()
                     #Condición para salir del bucle si el código está vacío
                      if producto_vendido == "":
                         break
                      if not producto_vendido.replace(" ", "").isalpha():
                        print(" Error. Por favor ingrese solo letras.")
                      elif producto_vendido in productos:
                       while True:
                          try:
                            venta = int(input(" Cantidad vendida: "))
                            if productos[producto_vendido] is not None and 'stock' in productos[producto_vendido]:
                            # cheuqeo si esta el valor stock en el diccionario y si es un diccionario
                             stock_original = productos[producto_vendido]['stock']
                             if stock_original < venta:
                               print(f" Error: No hay suficiente stock del producto '{producto_vendido}'.")
                               continue
                             stock_actualizado= stock_original - venta
                             productos[producto_vendido]['stock'] = stock_actualizado
                             if productos[producto_vendido]['stock'] <= 10:
                               print(f" Alerta Stock bajo de {producto_vendido}")
                             print(f" El stock de '{producto_vendido}' fué modificado en el inventario.")
                             break
                            else:
                             print(f" Error: El producto '{producto_vendido}' no tiene un stock válido.")
                          except ValueError:
                           print(" Error. Por favor ingrese solo números.")
                      else:
                        print(f" El producto '{producto_vendido}' no existe en el inventario.")
         # Mostrar el inventario disponible
         case 7:
               print(" Productos disponibles: (o presioná Enter para terminar):")
               for nombre, detalles in productos.items():
                   if detalles is not None: # Verifico que los valores no esten
                     print(f"{nombre.capitalize()}:  ${detalles.get('precio', 'N/A')} ,{detalles.get('stock', 'N/A')} unidades")
                     #  Accedemos con seguridad
                   else:
                     print(f"{nombre.capitalize()}: Detalles no disponibles")
         # Usamos keys() para ver todas las claves del diccionario osea los productos
         case 8:
              print(productos.keys())
         # vemos solo stock
         case 9:
           for producto, detalles in productos.items():
              if detalles is not None and 'stock' in detalles:
                  print(f"{producto.capitalize()}: {detalles['stock']} unidades")
                  if detalles["stock"] <= 10: #Con el condicionale verifico el stock bajo
                    print(f" Alerta Stock bajo de {producto}")
              elif detalles is not None: # Verificamos que la disponibilidad de stock
                  print(f"{producto.capitalize()}: Stock no disponible")
              else: # Si ni hay valores
                  print(f"{producto.capitalize()}: Detalles no disponibles")
         # vemos solo los precios
         case 10:
              for producto, detalles in productos.items():
                  if detalles is not None and 'precio' in detalles: #chequeo si el dicionario  productos tiene los valores stock y precio
                    print(f"{producto.capitalize()}: $ {detalles['precio']}")
                    if detalles["precio"] == 0 or detalles["precio"] == "None": #verifico si el precio es nulo 0 o None
                      print(f" Alerta Precio Nulo de {producto}")
                  elif detalles is not None: # Verificamos si esta disponible precio
                      print(f"{producto.capitalize()}: Precio no disponible")
                  else: # Si no hay valores
                      print(f"{producto.capitalize()}: Detalles no disponibles")
         # Vemos el precio de un producto determinado
         case 11:
               while True:
                      print("\nIngresá el nombre del producto a saber precio (o presioná Enter para terminar):")
                      getproducto = input("Producto: ").lower().title().strip()
                      if getproducto == "":
                         break
                      # Validar que no se ingresen varactres numericos ni especiales como nombre del producto
                      if not getproducto.replace(" ", "").isalpha():
                        print(" Error. Por favor ingrese solo letras.")
                      else:
                        #
                        # Compruebo que los productos esten y que tenga el valor precio
                        if getproducto in productos and productos[getproducto] is not None and 'precio' in productos[getproducto]:
                       #se muestra el valor del producto
                          print(f"El precio de producto '{getproducto}' es ${productos[getproducto]['precio']}.")
                          if productos[getproducto]['precio'] == 0 or productos[getproducto]['precio'] == "None":
                            print(f" ALERTA. El precio de '{getproducto}' es nulo/invalido.")
                        elif getproducto in productos and productos[getproducto] is not None:
                            print(f"El producto '{getproducto}' no tiene información de precio.")
                        else:
                           print(f"El producto '{getproducto}' no existe en el inventario.")
         # Ver stock de un producto determinado
         case 12:
               while True:
                      print("\nIngresá el nombre del producto a saber stock (o presioná Enter para terminar):")
                      getproducto = input("Producto: ").lower().title().strip()
                      if getproducto == "":
                         break
                      # Valido caracteres alfabeticos
                      if getproducto.replace(" ", "").isalpha():
                        # Compruebo que  productos no este vacio y que exista un valor stock en el diccionario productos
                        if getproducto in productos and productos[getproducto] is not None and 'stock' in productos[getproducto]:
                       #se muestra el stock del producto
                               print(f"El stock de producto '{getproducto}' es {productos[getproducto]['stock']} unidades.")
                               if productos[getproducto]['stock'] <= 10: #Con el condicionalecondicional verifico el stock bajo
                                  print(f" Alerta Stock bajo de {getproducto}")
                        elif getproducto in productos and productos[getproducto] is not None:
                             print(f"El producto '{getproducto}' no tiene información de stock.")
                        else:
                             print(f"El producto '{getproducto}' no existe en el inventario.")
                      else:
                        print(" Error. Por favor ingrese solo letras.")
         # Agregar un producto, imprimira al final con valor None
         case 13:
               print("\nIngresá el nombre del producto que querés agregar (o presioná Enter para terminar):")
               while True:

                      incorporado = input("Producto a agregarse: ").lower() .title().strip()
                      if incorporado == "":
                         break
                      ##  verifico si es una cadena valida
                      if not incorporado.replace(" ", "").isalpha():
                        print(" Error. Por favor ingrese solo letras.")
                      else:
                         if incorporado in productos:
                            print(f"El producto '{incorporado}' ya existe en el inventario.")
                         else:
                            productos[incorporado] = {"stock": 0, "precio": 0} # Inicializo los valores
                            print(f"El producto '{incorporado}' fue agregado del inventario con stock y precio inicial de 0.")

         # Nos abastecemos de unidades de un producto y lo sumamos
         case 14:
          while True:
                      producto_comprado = input("\n Ingresá el nombre del producto a actualiza stock:(o presioná Enter para terminar):").lower().title().strip()

                     #Condición para salir del bucle si el código está vacío
                      if producto_comprado == "":
                         break
                      #  Verifico que sea una cadena
                      if producto_comprado.replace(" ", "").isalpha():
                          if producto_comprado in productos and productos[producto_comprado] is not None and 'stock' in productos[producto_comprado]: # Check if product exists and has a valid stock entry
                            while True:
                              try:
                                  compra = int(input(" Cantidad comprada: "))
                                  if compra > 0:
                                      stock_original = productos[producto_comprado]['stock']
                                      stock_actualizado= stock_original + compra
                                      productos[producto_comprado]['stock'] = stock_actualizado
                                      print(f" El stock de '{producto_comprado}' fué modificado en el inventario.")
                                      break
                                  else:
                                       print(" Error. Por favor ingrese solo números positivos.")
                              except ValueError:
                                    print(" Error. Por favor ingrese solo números.")
                          elif producto_comprado in productos and productos[producto_comprado] is not None:
                              print(f" Error: El producto '{producto_comprado}' no tiene un stock válido para actualizar.")
                          else:
                              print(f" El producto '{producto_comprado}' no existe en el inventario.")
                      else:
                        print(" Error. Por favor ingrese solo letras.")
         # Borramos el inventario
         case 15:
             productos.clear()
             print(" Todo el inventario ha sido borrado. ")
         #Salir
         case 16 :
            print(" Gracias por usar el programa! ")
            break
         # Ver grafico de stock
         case 17:
            productos_nombres = list(productos.keys())
            stock_valores = [detalles['stock'] for detalles in productos.values() if detalles is not None and 'stock' in detalles]
            productos_validos = [nombre for nombre, detalles in productos.items() if detalles is not None and 'stock' in detalles]

            # Creo una lista de colores para destacar el alerta de stock
            colors = ['red' if (detalles is not None and isinstance(detalles.get('stock'), int) and detalles.get('stock') <= 10) else 'blue' for detalles in productos.values()]


            plt.figure(figsize=(5, 4)) # tamaño del grafico
            plt.bar(productos_validos, stock_valores, color=colors) # colores
            plt.xlabel("Producto") # etiqueta o eje de producto, el horizontal
            plt.ylabel("Stock") #etiqueta / eje de cantidad, el vertical
            plt.title("Stock de Productos en Inventario") # titulo del grafico
            plt.xticks(rotation=45, ha='right')
            plt.tight_layout()
            plt.show()

# Estado final del diccionario
print("\n *** Estado final del Inventario ***")
# Mientras imprimimos el listado, alertamos de stock bajo y orecio nulo
for producto, detalles in productos.items():
  if detalles is not None:
    stock_numero = detalles.get("stock", "N/A")
    precio_numero = detalles.get("precio", "N/A") #  .get con valores default para stock y precio

    if isinstance(stock_numero, int) and stock_numero <= 10: # Chequeamos stock and ensure it's an integer
        print(f"ALERTA DE STOCK.  El stock de {producto} es  bajo. {stock_numero} unidades.") # Muestro el alerta
    if  precio_numero == 0 or precio_numero == "None":
        print(f"ALERTA DE PRECIO.  El precio de {producto} es  nulo. $ {precio_numero} .")
    print(f"{producto.capitalize()}: $  {precio_numero}, {stock_numero}  unidades" )
  else:
    print(f"{producto.capitalize()}: Detalles no disponibles" )